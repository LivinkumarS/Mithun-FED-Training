Directory--> the folder where all the webpage files are stored.


webpage--> a single document on the internet. ex: index.html, about.html.
website--> collection of webpages under one domain. like a book.

techs that need to be known to create webpages are HTML, CSS, JS.

HTML --> Hyper Text Markup Language.
Hyper Text---> The text that takes you to another destination.
Markup language. >  we would use markups like tags to structure the contents in a webpage.

explanation:
------------
HTML is the basic building block of all webpages. It tells the browser what to display and how to structure the contents<></>

extenstion---> .html (index)

comment--->  <!-- code  --> (ctrl + /)

tags--> <>(open) </>(close). normal tags(<></>), self closing(<>)

boilerplate---> Basic structure of HTML html---> head(metaData), body(contents)

Attribute
--------------
additional information about the element.
syntax: <p name1="value" name2="value"></p>

Basic Tags in HTML 
--------------------
Heading Tags---> h1,h2,h3,h4,h5,h6
paragraph---> p
divide---> div--> to create a box and wrap contents in it.
span---> to add property to particular word or sentence.

br and hr(self closing tags)---> br(breaking)---> hr(Horizontal Line)

Anchor---> a (create links). href---> link. target="_blank"(new tab)

Typpography Tags 
--------------------

bold---> b
strong--> strong
del--> deleted text
sup---> sup (2 power 2)
mark---> highlighting
ins---> ins(underlining)

Ordered List  (Number as a prefix)
-------------
parent---> ol
list elements---> li

Unordered List  (Symbols as a prefix)
-------------
parent---> ul
list elements---> li

Image tag 
-----------

img(self closing tag). Attributes--> src, alt(alternative text)

File path:
-----------
parent---> ../
child---> /
sibling--> ./



Table border="1"
---------

table-->thead,tbody
to create row---> tr 
to add data--> th, td

task--> s.no, name, role, email, native, isMarried. (10 details)


Form 
---------

form--> multiple inputs
input(Self Closing Tag)---> type

Attributes: type, name, placeholder, id, required, value(radio)

Types 
-----
1)text
2)number
3)password
4)date
5)email
6)time
7)radio
8)checkbox
9) reset
10)submit



CSS
----

Cascading Style Sheet.

used to style the elements in HTML.

syntax:
-------

background-color, green
tagname-->h1,div

selector{
    property1: value; (ex: background-color: green;)
    property2: value;
    property3: value;
    .
    .
    .
}

Ways to insert CSS into HTML
------------------------------

internal---> style > head
external---> create css file outside the HTML and link it.
inline

Types of selectors
---------------------
Tag name selector----> the name of the tag as a selector

id name selector--> selecting tag using it's Id name."#" as a pefix. (assign id attribute). id name should be unique. a single tag can hold only one id name. should not contain special chars.(@#$%^&) (allowed "- _")

class name selector---> selecting multiple tags using the common class name. "." as prefix. class name can be repeated. a single tag can hold more than one class name.

Universal Selector---> Common selector (*). it will select each and every tag.


 * < tag < class(.) < id(#)

 combination of selectors
 ----------------------------

 descendant selector (" ")---> selects all the matching descendant.

 grandfather-->father-->child-->grandchild-->greatgrandchild
 selector1 selector2{

 }


 direct descendant selector (">") (child selector)---> selects only matching direct children.

 grandfather-->father-->child-->grandchild-->greatgrandchild
 selector1>selector2{

 }

Pseudo--selector:
-----------------
pseudo selector targets an element based on it's state, position or specific parts.

Pseudo Classes (:)
--------------------
 state, position
1)hover---> it targets an element when the cursor hovers on it
2)focus---> it is usually used in an input tag.
3)first-child---> it selects the first child of given selector.
4)last-child---> it selects the last child of given selector.
5)nth-child(num)---> selects an element in given position.(odd,even)

Pseudo Elements (::)
---------------------
specific parts
1)first-letter---> selects only the first letter of given selector.
2)first-line---> selects only the first line of given selector.
3)before ---> this is used to add content and style that content before the original content of given selector.
4)after ---> this is used to add content and style that content after the original content of given selector.



 CSS Units
 ---------------

 static Units
 -------------
 px----> 0.26mm
 pt----> 0.33mm
 cm---->10mm
 in

 Dynamic units 
 -------------
 %----> relative to the parent. (width, height, padding, margin)
(20/100 * 500). width---> parent width, height---> parent  height, padding----> parent width, margin---> parent width

rem (root em)---> to  =measure font-size(keeping same font size throughout the page). this is  relative to root(html) elements font size(16px)
ex---> 1rem---> 16px. 2rem---> 32px, 1.5rem---> 24px, 1.8rem-->

vw (viewport width) (width of a container)----> relative to the screen's width
100vw---> 100% screen
90vw---> 90% screen

vh (viewport height) (height of a container)--> relative to the screen height

Basic Properties of CSS.
___________________________

background-color: value;

color values---> 1)name of the color. 2) RGB(num1, num2, num3(0-255)). hex codes(#3-6 digits)


Text Properties 
-------------------
color---> changes the text color.
font-size---> 1)key words. 2)numeric values with units.
font-weight----> thickness.1) key words. pre  defined numbers
font-family----> text shapes and texture.(importing fonts from other sites.)
font-style---> italic, normal
text-align---> start, center, end, justify


Developer tools---> ctrl + shift + i


Box Modelling
---------------
In HTML each and every elements will be considered as rectangular box. And using some CSS properties we can style those boxes. 

Width and Height(content width) ---> width--> horizontal size. height--->

Padding (inner space) ---> occurs between the content and the outer border

Border---> thin layer of border for the box.

Margin (Outer space) ---> that seperates the other contents from itself.

Box-sizing---> cotent-box, border-box.
default---> content-box---> box-width--> content-width + padding + border.

border-box---> box-width--> width property value.

bordder-radius---> makes curvy edges.




Positioning
----------------
in css, positioning controls  how an elements are placed in the documents flow.

position: ;
top: ;
bottom: ;
left: ;
right: ;


Static (Default) 
----------------
Default for all elements.
positioned based on the normal document flow.
offset the properties (top,bottom....)

Relative 
--------
keeps the element in the normal document flow.
it allows to shift the element relative to it's original position. (%---> relative to it's parent's size).

Absolute
----------
Removes element from document flow.
allows to position an element relative to it's nearest positioned ancestor.

NPA---> Nearest positioned(relative, Absolute, fixed) ancestor.

Fixed
--------
It will remove the element from document flow.
relative to html.
always stays in the position(will not get scrolled).

Sticky
---------
It is hybrid of Relative and fixed.

